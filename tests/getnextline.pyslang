include "std.pyslang"
include "string.pyslang"

macro fd mem end
macro statbuf fd 8 + end
macro content statbuf sizeof(stat) + end
macro line content sizeof(str) + end

if argc 2 < do
	"Usage: " eputstr 0 nth_argv from_cstr eputstr " <file>\n" eputstr
	"ERROR: No file provided" eputstr
	0 exit
end


O_RDONLY
1 nth_argv
AT_FDCWD
openat

if dup 0 < do
	"ERROR: could not open file " eputstr 1 nth_argv from_cstr eputstr "\n" eputstr
	1 exit
end

fd !64

if statbuf fd @64 fstat 0 < do
	"ERROR: could not determine the size of file " eputstr 1 nth_argv from_cstr eputstr "\n" eputstr
	1 exit
end

statbuf stat.st_size @64 content str.count !64


0                     // offset
fd @64                // fd
MAP_PRIVATE           // flags
PROT_READ             // protection level
content str.count @64 // length
NULL                  // addr
mmap
content str.data !64

if content str.data @64 0 < do
	"ERROR: could not memory map the file " eputstr 1 nth_argv from_cstr eputstr
	1 exit
end

while content str.count @64 0 > do
	line content read_line
	' ' line ltrim
	'\t' line ltrim
	"|" putstr line @str putstr "|\n" putstr
end
0 exit
